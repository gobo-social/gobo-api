shards:
  id: &id
    id:
      description: The unique identifier for this resource.
      type: integer

  person_id: &person_id
    person_id:
      description: The unique ID for the person that owns this resource.
      type: integer

  timestamp: &timestamp
    created:
      description: The ISO 8601 timestamp this resource was created.
      type: string
    updated:
      description: The ISO 8601 timestamp this resource was updated.
      type: string

  linkCore: &linkCore
    origin_type:
      description: The type of resource that represents the origin of this edge.
      type: string
    origin_id:
      description: The unique identifier for the resource.
      type: integer
    target_type:
      description: The type of resource that represents the target of this edge.
      type: string
    target_id:
      description: The uniuqe identifier for the resource.
      type: integer
    name:
      description: The name that describes the type of edge between these resources.
      type: string

  link: &link
    type: object
    additionalProperties: false
    required: [ id, origin_type, origin_id, target_type, target_id, name ]
    properties:
      <<: *id
      <<: *linkCore
      <<: *timestamp

  personCore: &personCore
    name:
      description: Chosen display name for this person.
      type: string

  person: &person
    type: object
    additionalProperties: false
    required: [ id ]
    properties:
      <<: *id
      <<: *personCore
      <<: *timestamp

  identityCore: &identityCore
    <<: *person_id
    base_url:
      description: The base URL of the service provider of this identity.
      type: string
    profile_url:
      description: The URL pointing to this identity on the host provider.
      type: string
    profile_image:
      description: The URL pointing to this idenity profile picture on the host provider.
      type: string
    username:
      description: The username associated with this identity.
      type: string
    name:
      description: The display name associated with this identity.
      type: string
    oauth_token:
      description: The OAuth token associated with this identity.
      type: string
    oauth_token_secret:
      description: The OAuth secret token associated with this identity access.
      type: string

  identity: &identity
    type: object
    additionalProperties: false
    required: [id, person_id, base_url, username]
    properties:
      <<: *id
      <<: *identityCore
      <<: *timestamp

  registrationCore: &registrationCore
    <<: *person_id
    base_url:
      description: The base URL of the service provider of this identity.
      type: string
    oauth_token:
      description: The OAuth token associated with this identity.
      type: string
    oauth_token_secret:
      description: The OAuth secret token associated with this identity access.
      type: string
    saved_state:
      description: The current state of the registration.
      type: string
    request_time:
      description: The ISO 8601 timestamp of the last request to the provider.
      type: string
   
  
  registration: &registration
    type: object
    additionalProperties: false
    required: [id, person_id, base_url]
    properties:
      <<: *id
      <<: *registrationCore
      <<: *timestamp


resources:
  discovery:
    template: /
    route: /
    methods:
      get:
        request: {}
        response:
          type: application/json
          status: 200

  links:
    template: /links{?view,direction,per_page,page,origin_type,origin_id,target_type,target_id,name}
    route: /links
    methods:
      post:
        request:
          type: application/json
          schema:
            type: object
            additionalProperties: false
            required: [ origin_type, origin_id, target_type, target_id, name ]
            properties: *linkCore
        response:
          type: application/json
          schema: *link
          status: 201

      get:
        request: {}
        response:
          type: application/json
          status: 200
          schema:
            type: array
            items: *link


  link:
    template: /links/{id}
    route: /links/<int:id>
    methods:
      get:
        request: {}
        response:
          type: application/json
          status: 200
          schema: *link

      put:
        request:
          type: application/json
          schema: *link
        response:
          type: application/json
          status: 200
          schema: *link

      delete:
        request: {}
        response:
          status: 204


  people:
    template: /people{?view,direction,per_page,page}
    route: /people
    methods:
      post:
        request:
          type: application/json
          schema:
            type: object
            additionalProperties: false
            properties: *personCore
        response:
          type: application/json
          schema: *person
          status: 201

      get:
        request: {}
        response:
          type: application/json
          status: 200
          schema:
            type: array
            items: *person


  person:
    template: /people/{id}
    route: /people/<int:id>
    methods:
      get:
        request: {}
        response:
          type: application/json
          status: 200
          schema: *person

      put:
        request:
          type: application/json
          schema: *person
        response:
          type: application/json
          status: 200
          schema: *person

      delete:
        request: {}
        response:
          status: 204


  identities:
    template: /identities{?view,direction,per_page,page}
    route: /identities
    methods:
      post:
        request:
          type: application/json
          schema:
            type: object
            additionalProperties: false
            required: [person_id, base_url, username]
            properties: *identityCore
        response:
          type: application/json
          schema: *identity
          status: 201

      get:
        request: {}
        response:
          type: application/json
          status: 200
          schema:
            type: array
            items: *identity


  identity:
    template: /identities/{id}
    route: /identities/<int:id>
    methods:
      get:
        request: {}
        response:
          type: application/json
          status: 200
          schema: *identity

      put:
        request:
          type: application/json
          schema: *identity
        response:
          type: application/json
          status: 200
          schema: *identity

      delete:
        request: {}
        response:
          status: 204

  registrations:
    template: /registrations{?view,direction,per_page,page}
    route: /registrations
    methods:
      post:
        request:
          type: application/json
          schema:
            type: object
            additionalProperties: false
            required: [person_id, base_url]
            properties: *registrationCore
        response:
          type: application/json
          schema: *registration
          status: 201

      get:
        request: {}
        response:
          type: application/json
          status: 200
          schema:
            type: array
            items: *registration


  registration:
    template: /registrations/{id}
    route: /registrations/<int:id>
    methods:
      get:
        request: {}
        response:
          type: application/json
          status: 200
          schema: *registration

      put:
        request:
          type: application/json
          schema: *registration
        response:
          type: application/json
          status: 200
          schema: *registration

      delete:
        request: {}
        response:
          status: 204